{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Expression2",
    "patterns": [
        {"include": "#preproc"},
        {"include": "#comment"},
        {"include": "#directive"},

        {"include": "#strings"},
        {"include": "#keywords"},
        {"include": "#constant"},
        {"include": "#operators"},
        {"include": "#numbers"},
        {"include": "#identifier"},
        {"include": "#functioncall"},
        {"include": "#types"}
    ],
    "repository": {
        "preproc": {
            "name": "meta.preprocessor",
            "match": "#(ifn?def|endif|else)"
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.line",
                    "match": "(#)[^\\[].*$\\n?"
                },
                {
                    "name": "comment.block",
                    "begin": "#\\[",
                    "end": "\\]#"
                }
            ]
        },
        "directive": {
            "patterns": [{
                "name": "entity.name.function",
                "match": "@(name|model|trigger|autoupdate).*\n?"
            }, {
                "name": "entity.name.function",
                "match": "@(inputs|outputs|persist)"
            }]
        },
        "keywords": {
            "patterns": [{
                "name": "keyword.control.expression2",
                "match": "\\b(if|while|for|return|switch|foreach|case|default|break|local|continue|else(if)?|function)\\b"
            }]
        },
        "strings" : {
            "name": "string.quoted.double.expression2",
            "begin": "\"",
            "end": "\"",
            "patterns": [{
                "name": "constant.character.escape.expression2",
                "match": "\\\\."
            }]
        },
        "types": {
            "name": "entity.name.type",
            "match" : "\\b(number|string|normal|vector|void|angle|quaternion|vector2|vector4|table)\\b"
        },
        "operators": {
            "name": "keyword.operator",
            "match": "\\||\\|\\||<<|>>|&&|&|\\$|\\?|!|\\^|\\^\\^|\\+\\+|\\+|\\+=|-=|\\*=|\\/=|\\-|\\-\\-|\\*|\\/|~|%|==|=|!=|<=|>=|<|>"
        },
        "constant": {
            "name": "variable.other.constant",
            "match": "\\b_[\\w_]*\\b"
        },
        "numbers": {
            "name": "constant.numeric",
            "match": "(0x)?\\d+([e.]\\d+)?"
        },
        "identifier": {
            "name": "variable.other",
            "match": "\\b([A-Z][a-zA-Z\\d]*(_[a-zA-Z\\d]+)*)\\b"
        },
        "functioncall": {
            "match": "\\b([a-z][A-Za-z]*)\\(",
            "captures": {
                "1": {
                  "name": "entity.name.function"
                }
            }
        }
    },
    "scopeName": "source.e2"
}